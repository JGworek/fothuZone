{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"canvas\"];\nexport let SalfaggeVisualizerComponent = /*#__PURE__*/(() => {\n  class SalfaggeVisualizerComponent {\n    constructor() {\n      this.lowercaseAlphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n      this.directionKeys = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\n      this.pitchKey = \"\";\n      this.octaveKey = \"\";\n      this.AudioContext = window.AudioContext;\n      this.currentNote = \"\";\n    }\n\n    handleKeyDownEvent(event) {\n      if (this.checkLowerCaseAlphabet(event.key)) {\n        this.pitchKey = event.key;\n      }\n\n      if (this.checkDirectionKeys(event.key)) {\n        this.octaveKey = event.key;\n      }\n\n      if (this.pitchKey === \"a\" && this.octaveKey === \"ArrowDown\") {\n        this.createSquare(\"rgb(0,0,255)\", 100, 100, 20, 20);\n        this.oscillator.frequency.value = 440.00;\n        this.currentNote = \"A4\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"s\" && this.octaveKey === \"ArrowDown\") {\n        this.createSquare(\"rgb(0,255,0)\", 120, 100, 20, 20);\n        this.oscillator.frequency.value = 493.88;\n        this.currentNote = \"B4\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"d\" && this.octaveKey === \"ArrowDown\") {\n        this.createSquare(\"rgb(255,255,0)\", 140, 100, 20, 20);\n        this.oscillator.frequency.value = 554.37;\n        this.currentNote = \"C#4\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"f\" && this.octaveKey === \"ArrowDown\") {\n        this.createSquare(\"rgb(255,0,255)\", 160, 100, 20, 20);\n        this.oscillator.frequency.value = 659.25;\n        this.currentNote = \"E4\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"g\" && this.octaveKey === \"ArrowDown\") {\n        this.createSquare(\"rgb(0,255,255)\", 180, 100, 20, 20);\n        this.oscillator.frequency.value = 739.99;\n        this.currentNote = \"F#4\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"a\" && this.octaveKey === \"ArrowLeft\") {\n        this.createSquare(`rgb(${0 / 1.5},${0 / 1.5},${255 / 1.5})`, 100, 120, 20, 20);\n        this.oscillator.frequency.value = 220.00;\n        this.currentNote = \"A3\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"s\" && this.octaveKey === \"ArrowLeft\") {\n        this.createSquare(`rgb(${0 / 1.5},${255 / 1.5},${0 / 1.5})`, 120, 120, 20, 20);\n        this.oscillator.frequency.value = 246.94;\n        this.currentNote = \"B3\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"d\" && this.octaveKey === \"ArrowLeft\") {\n        this.createSquare(`rgb(${255 / 1.5},${255 / 1.5},${0 / 1.5})`, 140, 120, 20, 20);\n        this.oscillator.frequency.value = 277.18;\n        this.currentNote = \"C#3\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"f\" && this.octaveKey === \"ArrowLeft\") {\n        this.createSquare(`rgb(${255 / 1.5},${0 / 1.5},${255 / 1.5})`, 160, 120, 20, 20);\n        this.oscillator.frequency.value = 329.63;\n        this.currentNote = \"E3\";\n        this.audioContext.resume();\n      }\n\n      if (this.pitchKey === \"g\" && this.octaveKey === \"ArrowLeft\") {\n        this.createSquare(`rgb(${0 / 1.5},${255 / 1.5},${255 / 1.5})`, 180, 120, 20, 20);\n        this.oscillator.frequency.value = 369.99;\n        this.currentNote = \"F#3\";\n        this.audioContext.resume();\n      }\n    }\n\n    handleKeyUpEvent(event) {\n      if (this.checkLowerCaseAlphabet(event.key)) {\n        this.pitchKey = \"\";\n      }\n\n      if (this.checkDirectionKeys(event.key)) {\n        this.octaveKey = \"\";\n      }\n\n      this.audioContext.suspend();\n      this.currentNote = \"\";\n      this.createSquare(\"rgb(255,255,255)\", 100, 100, 100, 40);\n    }\n\n    createSquare(fillColor, x, y, w, h) {\n      this.ctx.fillStyle = fillColor;\n      this.ctx.fillRect(x, y, w, h);\n    }\n\n    checkLowerCaseAlphabet(key) {\n      for (let i = 0; i < this.lowercaseAlphabet.length; i++) {\n        if (key === this.lowercaseAlphabet[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    checkDirectionKeys(key) {\n      for (let i = 0; i < this.directionKeys.length; i++) {\n        if (key === this.directionKeys[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    ngOnInit() {\n      this.audioContext = new this.AudioContext();\n      this.oscillator = this.audioContext.createOscillator();\n      this.ctx = this.canvas.nativeElement.getContext(\"2d\");\n      this.createSquare(\"rgb(255,255,255)\", 100, 100, 100, 40);\n      this.oscillator.type = \"triangle\";\n      this.oscillator.frequency.value = 440;\n      this.oscillator.connect(this.audioContext.destination);\n      this.oscillator.start();\n      this.audioContext.suspend();\n    }\n\n  }\n\n  SalfaggeVisualizerComponent.ɵfac = function SalfaggeVisualizerComponent_Factory(t) {\n    return new (t || SalfaggeVisualizerComponent)();\n  };\n\n  SalfaggeVisualizerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SalfaggeVisualizerComponent,\n    selectors: [[\"app-salfagge-visualizer\"]],\n    viewQuery: function SalfaggeVisualizerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    hostBindings: function SalfaggeVisualizerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function SalfaggeVisualizerComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDownEvent($event);\n        }, false, i0.ɵɵresolveWindow)(\"keyup\", function SalfaggeVisualizerComponent_keyup_HostBindingHandler($event) {\n          return ctx.handleKeyUpEvent($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\", \"align-items-center\"], [1, \"col-10\", \"border\", \"border-dark-fothu\", \"align-self-center\"], [\"width\", \"600\", \"height\", \"300\"], [\"canvas\", \"\"], [1, \"col-2\", \"border\", \"border-dark-fothu\", \"align-self-center\"]],\n    template: function SalfaggeVisualizerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"canvas\", 3, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.currentNote ? ctx.currentNote : \" \", \" \");\n      }\n    },\n    styles: [\"\", \"canvas[_ngcontent-%COMP%]{border-style:solid}\"]\n  });\n  return SalfaggeVisualizerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}